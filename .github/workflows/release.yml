name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            extension: ""
          - os: macos-latest
            platform: macos
            extension: ""
          - os: windows-latest
            platform: windows
            extension: ".exe"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "1.1.x"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build binary
        run: bun run build:bin

      - name: Package artifact
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          VERSION="${GITHUB_REF_NAME}"
          ARCH="${RUNNER_ARCH,,}"
          BINARY_NAME="charis${{ matrix.extension }}"
          TARGET_NAME="charis-${VERSION}-${{ matrix.platform }}-${ARCH}${{ matrix.extension }}"
          mv "$BINARY_NAME" "dist/$TARGET_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: charis-${{ matrix.platform }}-${{ runner.arch }}
          path: dist/*
          retention-days: 7

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: charis-*
          merge-multiple: true

      - name: Verify tag matches package version
        run: |
          VERSION_FROM_TAG="${GITHUB_REF_NAME#v}"
          VERSION_FROM_PACKAGE=$(node -p "require('./package.json').version")
          if [ "$VERSION_FROM_TAG" != "$VERSION_FROM_PACKAGE" ]; then
            echo "Tag version ($VERSION_FROM_TAG) does not match package.json version ($VERSION_FROM_PACKAGE)." >&2
            exit 1
          fi

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
